{"version":3,"file":"component---src-pages-sms-tsx-19fdea5a24c0ec37f797.js","mappings":"0JASA,MACMA,EAAc,6DAcpBC,eAAeC,IACXC,QAAQC,IAAI,MACZ,IAAI,MACA,MAAMC,QAAiBC,MACnB,6DACA,CACIC,OAAQ,OACRC,QAAS,CACL,cAAiB,UAAUR,EAC3B,OAAU,uBAKtB,IAAKK,EAASI,GAAI,MAAM,IAAIC,MAAM,wBAAwBL,EAASM,YAEnE,MAAMC,EAAsB,QAAhB,EAAGP,EAASQ,YAAI,aAAbC,EAAeC,YAC9B,IAAKH,EAAQ,MAAM,IAAIF,MAAM,iCAE7B,MAAMM,EAAU,IAAIC,YACpB,IAAIC,EAAe,GAEnB,OAAa,OACT,MAAM,MAAEC,EAAK,KAAEC,SAAeR,EAAOS,OACrC,GAAID,EAAM,MAEVF,GAAgBF,EAAQM,OAAOH,EAAO,CAAEI,QAAQ,IAEhD,MAAMC,EAAQN,EAAaO,MAAM,MACjCP,EAA0B,QAAd,EAAGM,EAAME,aAAK,QAAI,GAE9B,IAAK,MAAMC,KAAQH,EACXG,EAAKC,WAAW,WAChBzB,QAAQC,IAAI,oBAAqBuB,EAAKE,MAAM,GAAGC,OAG3D,CAEA3B,QAAQC,IAAI,sCACZ2B,WAAW7B,EAAoB,IACnC,CAAE,MAAO8B,GACL7B,QAAQ6B,MAAM,sBAAuBA,GACrCD,WAAW7B,EAAoB,IACnC,CACJ,CAqTA,UAhTkB,KAEd,MAAM,EAAC+B,EAAI,EAAEC,IAAWC,EAAAA,EAAAA,UAAS,KAC3B,EAACC,EAAO,EAAEC,IAAcF,EAAAA,EAAAA,WAAS,IACjC,EAACH,EAAK,EAAEM,IAAYH,EAAAA,EAAAA,UAAS,KAO7B,EAACI,EAAQ,EAAEC,IAAeL,EAAAA,EAAAA,UAAmB,IAqCnD,OA/BAM,EAAAA,EAAAA,YAAU,KACNvC,GAAoB,GACrB,IA8BCwC,EAAAA,cAAAA,MAAAA,KACIA,EAAAA,cAAAA,KAAAA,KAAI,wBACJA,EAAAA,cAAAA,IAAAA,KAAG,wCACHA,EAAAA,cAAAA,KAAAA,KACKH,EAASI,KAAI,CAACC,EAAKC,IAChBH,EAAAA,cAAAA,KAAAA,CAAII,IAAKD,GAAQD,MAGvB,C","sources":["webpack://gatsby-starter-default/./src/pages/sms.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n\n\n\n\n\n\nconst logUrl1 = 'https://rare-coral-35556.upstash.io/zrange/textLogs/0/-1';\nconst accessToken = 'AYrkAAIjcDFjZDZlODJmNzQ2YzI0M2JiOGU5YjE2ZWU3MGMwMjI1OHAxMA'; // Your Upstash Access Token\nconst logUrl2 = `https://rare-coral-35556.upstash.io/hgetall/log:textLogs`;\nconst url = `https://rare-coral-35556.upstash.io`;\n\n\n\nfunction arrayToObject(arr : any ) {\n    const obj : any = {};\n    for (let i = 0; i < arr.length; i += 2) {\n        obj[arr[i]] = arr[i + 1]; // Set key-value pairs\n    }\n    return { [obj.phone] : obj };\n}\n\nasync function subscribeToChannel() {\n    console.log('!!')\n    try {\n        const response = await fetch(\n            \"https://rare-coral-35556.upstash.io/subscribe/test-channel\",\n            {\n                method: \"POST\",  // ✅ Upstash requires POST for subscribe\n                headers: {\n                    \"Authorization\": `Bearer ${accessToken}`,\n                    \"Accept\": \"text/event-stream\"  // ✅ Required for streaming\n                }\n            }\n        );\n\n        if (!response.ok) throw new Error(`Subscription failed: ${response.statusText}`);\n\n        const reader = response.body?.getReader();\n        if (!reader) throw new Error(\"Failed to get response reader\");\n\n        const decoder = new TextDecoder();\n        let partialChunk = \"\";\n\n        while (true) {\n            const { value, done } = await reader.read();\n            if (done) break;\n\n            partialChunk += decoder.decode(value, { stream: true });\n\n            const lines = partialChunk.split(\"\\n\");\n            partialChunk = lines.pop() ?? \"\"; // Save incomplete chunk for next read\n\n            for (const line of lines) {\n                if (line.startsWith(\"data: \")) {\n                    console.log(\"Received message:\", line.slice(6).trim());\n                }\n            }\n        }\n\n        console.log(\"Connection closed, reconnecting...\");\n        setTimeout(subscribeToChannel, 5000);\n    } catch (error) {\n        console.error(\"Subscription error:\", error);\n        setTimeout(subscribeToChannel, 5000);\n    }\n}\n\n\n\n\nconst IndexPage = () => {\n\n    const [logs, setLogs] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n\n\n\n    const UPSTASH_REDIS_REST_URL = url;\n    const UPSTASH_REDIS_REST_TOKEN = accessToken;\n    const CHANNEL = \"test-channel\";\n    const [messages, setMessages] = useState<string[]>([]);\n\n\n\n    const logUrl1 = `https://rare-coral-35556.upstash.io/subscribe/${CHANNEL}`;\n\n    useEffect(() => {\n        subscribeToChannel();\n    }, []);\n    \n  \n   \n\n\n  \n\n  \n\n\n\n\n\n\n    // useEffect(() => {\n    //     const eventSource = new EventSource(`${UPSTASH_REDIS_REST_URL}/subscribe/${CHANNEL}`);\n\n    //     eventSource.onmessage = (event) => {\n    //         setMessages((prev) => [...prev, event.data]); // Add new messages to the list\n    //     };\n\n    //     eventSource.onerror = (error) => {\n    //         console.error(\"EventSource failed:\", error);\n    //     };\n\n    //     return () => eventSource.close(); // Cleanup on unmount\n    // }, []);\n\n    return (\n        <div>\n            <h1>Upstash Pub/Sub Test</h1>\n            <p>Waiting for messages from Upstash...</p>\n            <ul>\n                {messages.map((msg, index) => (\n                    <li key={index}>{msg}</li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\n\n\n\n\n\n  \n\nconst OriginalRedisTest = () => {\n    const [message, setMessage] = useState('');\n    const [newText, setNewText] = useState('');\n  \n  \n    const [logs, setLogs] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n  \n  \n    \n        // curl -X GET 'https://rare-coral-35556.upstash.io/zrange/textLogs/0/10' \\\n      // -H 'Authorization: Bearer AYrkAAIjcDFjZDZlODJmNzQ2YzI0M2JiOGU5YjE2ZWU3MGMwMjI1OHAxMA'\n  \n  \n    // Fetch current value from Redis via Cloudflare Worker\n    useEffect(() => {\n   \n  \n  \n      ;(async()=>{\n         \n         const response = await fetch(logUrl1, {\n              method: 'GET',\n              headers: {\n                  'Authorization': `Bearer ${accessToken}`,\n              },\n          })\n         \n          const data = await response.json();\n          console.log(data)\n  \n          const pipelineCommands = Array.isArray(data.result) \n          ? data.result.map((phone: any) => ([\n              \"HGETALL\",`log:${phone}`\n          ]))\n          : [];\n  \n          if (pipelineCommands.length === 0) {\n              console.error(\"pipelineCommands is empty. Check data.result:\", data.result);\n          }\n          console.log(pipelineCommands)\n  \n  \n          // const testResponse = await fetch(`https://rare-coral-35556.upstash.io/hgetall/log:9999999999`, {\n          //     headers: { 'Authorization': `Bearer ${accessToken}` }\n          // });\n  \n          // const commands = [\n          //     [\"HGETALL\", \"log:9999999999\"],\n          //     [\"HGETALL\", \"log:1231231234\"],\n          //     // Retrieve the value\n          // ];\n  \n          console.log(pipelineCommands)\n  \n          const testResponse2 = await fetch(`https://rare-coral-35556.upstash.io/pipeline`, {\n              method: 'POST',  // Use POST to send data\n              headers: {\n                  'Authorization': `Bearer ${accessToken}`,\n                  'Content-Type': 'application/json' // Ensure proper JSON format\n              },\n              body:JSON.stringify(pipelineCommands) // Convert array to JSON string\n          });\n  \n          // console.log(testResponse2)\n          const data2 = (await testResponse2.json())\n          //console.log(data2)\n          let formatedData2 : any = {}\n          data2.forEach((x : any ) => { \n              formatedData2 = {\n                  ...formatedData2, \n                  ... arrayToObject( x.result )\n              }\n          })\n  \n          let textLog : any = {\n              order : data?.result ?? [],\n              data : formatedData2,\n          }\n  \n          console.log(textLog)\n  \n  \n  \n      //console.log(await getTextLogs())\n  \n      })();\n  \n    }, []);\n  \n    const handleSubmit = () => {\n      // Send new text to Cloudflare Worker to save in Redis\n      axios.post('/api/setValue', { message: newText })\n        .then(response => {\n          setMessage(response.data.message);\n        })\n        .catch(err => {\n          console.error('Error saving value:', err);\n        });\n    };\n  \n    return (\n      <div>\n        <h1>Message from DB: {message}</h1>\n        <input\n          type=\"text\"\n          value={newText}\n          onChange={(e) => setNewText(e.target.value)}\n        />\n        <button onClick={handleSubmit}>Save Message</button>\n      </div>\n    );\n  };\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//xxx\n\n// echo \"xxxx\" > /Users/macbook/.gh_token_personal\n// echo \"xxx\" > /Users/macbook/.gh_token_work\n\n// xxx\n\n\n// echo \"Hello, GitHub!\" | gh api repos/MTCMarketing/github-account-switcher/contents/myfile.txt \\\n// -X PUT \\\n// -F message=\"Adding admin-github-account.py\" \\\n// -F content=\"$(base64 -w 0 admin-github-account.py)\" \\\n// -F branch=\"main\"\n\n\n//   admin-github-account.py\n\n//   ~/.ssh/github_accounts.json\n\n//   SHA=$(gh api repos/MTCMarketing/github-account-switcher/contents/github_accounts.json --jq '.sha') && \\\n// gh api repos/MTCMarketing/github-account-switcher/contents/github_accounts.json -X PUT -F message=\"Updating /Users/macbook/.ssh/github_accounts.json\" -F content=\"$(base64 < /Users/macbook/.ssh/github_accounts.json | tr -d '\\n')\" -F sha=\"$SHA\" -F branch=\"main\"\n\n\n\n\n// curl -X PUT -H \"Authorization: token xxxx\" \\\n//      -H \"Accept: application/vnd.github.v3+json\" \\\n//      https://api.github.com/repos/MTCMarketing/helloworld/pages \\\n//      -d '{\"source\":{\"branch\":\"gh-pages\"}}'\n\n\n\n//      macbook@192 public % curl -X PUT -H \"Authorization: token XXX\" \\\n//      -H \"Accept: application/vnd.github.v3+json\" \\\n//      https://api.github.com/repos/MTCMarketing/helloworld/pages \\\n//      -d '{\"source\":{\"branch\":\"gh-pages\"}}'\n// {\n//   \"message\": \"Not Found\",\n//   \"documentation_url\": \"https://docs.github.com/rest/pages/pages#update-information-about-a-apiname-pages-site\",\n//   \"status\": \"404\"\n// }\n\n\n// curl -X PUT -H \"Authorization: token xxxx\" \\\n//      -H \"Accept: application/vnd.github.v3+json\" \\\n//      https://api.github.com/repos/MTCMarketing/helloworld/pages \\\n//      -d '{\"source\":{\"branch\":\"gh-pages\", \"path\": \"/\"}}'\n\n\n\n//      curl -H \"Authorization: token xxx\" \\\n//      -H \"Accept: application/vnd.github.v3+json\" \\\n//      https://api.github.com/repos/MTCMarketing/helloworld/pages\n\n\n\n\n// security add-generic-password -s AI_API_TOGETHER_01 -a $USER -w \"xxxxxx\"\n// # notes on pulling env variables from OS keychain -- safer\n// echo $(security find-generic-password -s AI_API_TOGETHER_01 -a $USER -w)\n// security delete-generic-password -s PORKBUN_SECRET_KEY -a $USER \n\n\n\n//     }\n\n\n//     curl -X PUT -H \"Authorization: token xxxx\" \\\n//          -H \"Accept: application/vnd.github.v3+json\" \\\n//          https://api.github.com/repos/MTCMarketing/helloworld/pages \\\n//          -d '{\"source\":{\"branch\":\"gh-pages\", \"path\": \"/\"}}'\n\n\n//      curl -H \"Authorization: token xxxxxx\" \\\n//          -H \"Accept: application/vnd.github.v3+json\" \\\n//          https://api.github.com/repos/MTCMarketing/helloworld/pages\n    \n\n\n// FREE MODEL\n// curl -X POST \"https://api.together.xyz/v1/chat/completions\" \\\n//   -H \"Authorization: Bearer $(echo $(security find-generic-password -s AI_API_TOGETHER_01 -a $USER -w))\" \\\n//   -H \"Content-Type: application/json\" \\\n//   -d '{\n//     \"model\": \"meta-llama/Llama-3.3-70B-Instruct-Turbo-Free\",\n//     \"messages\": [{\"role\":\"user\",\"content\":\"How long before you forget?\"}]\n//   }'\n\n\n\n/*\n\n//     curl -X POST \"https://rare-coral-35556.upstash.io/pipeline\" \\\n// -H \"Authorization: Bearer AYrkAAIjcDFjZDZlODJmNzQ2YzI0M2JiOGU5YjE2ZWU3MGMwMjI1OHAxMA\" \\\n// -H \"Content-Type: application/json\" \\\n// -d '[\n//   [\"HGETALL\", \"log:9999999999\"]\n// ]'\n\n[\"HGETALL\", \"log:9999999999\"]\n\n*/\n\n\nexport default IndexPage;\n\n\n// gatsby build &&    cp -r /Users/macbook/local/dialer-v4/dialer/public/. /Users/macbook/local/dialer-v4/deploy/ && cd /Users/macbook/local/dialer-v4/deploy && git add . && git commit -m test && git push && cd ../dialer\n\n\n// curl -X GET \"https://rare-coral-35556.upstash.io/publish/test-channel/Hello%20from%20Upstash\" -H \"Authorization: Bearer AYrkAAIjcDFjZDZlODJmNzQ2YzI0M2JiOGU5YjE2ZWU3MGMwMjI1OHAxMA\"\n// curl -X POST \"https://rare-coral-35556.upstash.io/publish/test-channel\" -H \"Authorization: Bearer AYrkAAIjcDFjZDZlODJmNzQ2YzI0M2JiOGU5YjE2ZWU3MGMwMjI1OHAxMA\" -d \"hello from Upstash\"\n\n// curl -X GET \"https://rare-coral-35556.upstash.io/info\" -H \"Authorization: Bearer AYrkAAIjcDFjZDZlODJmNzQ2YzI0M2JiOGU5YjE2ZWU3MGMwMjI1OHAxMA\"\n\n// curl -X POST https://rare-coral-35556.upstash.io/subscribe/test-channel \\\n//   -H \"Authorization: Bearer AYrkAAIjcDFjZDZlODJmNzQ2YzI0M2JiOGU5YjE2ZWU3MGMwMjI1OHAxMA\" \\\n//   -H \"Accept:text/event-stream\""],"names":["accessToken","async","subscribeToChannel","console","log","response","fetch","method","headers","ok","Error","statusText","reader","body","_response$body","getReader","decoder","TextDecoder","partialChunk","value","done","read","decode","stream","lines","split","pop","line","startsWith","slice","trim","setTimeout","error","logs","setLogs","useState","loading","setLoading","setError","messages","setMessages","useEffect","React","map","msg","index","key"],"sourceRoot":""}